load("/Users/juliaivey/Desktop/CodeChallenge2024/CodeChallenge2024.RData")
install.packages("dplyr")
library(dplyr)
install.packages("tidyr")
library(tidyr)

names(HAM_protect)[names(HAM_protect) == "ID"] <- "old_id"
HAM_protect_new <- HAM_protect %>%
	left_join(id_map, by = "old_id")

HAM_protect <- NULL
HAM_protect_new$old_id <- NULL
HAM_protect_new$ham_3a_wl <- NULL
HAM_protect_new$ham_3b_wd <- NULL
HAM_protect_new$ham_3c_rld <- NULL
HAM_protect_new$ham_3d_asa <- NULL 
HAM_protect_new$ham_3e_pdw <- NULL
HAM_sleep$ham_3a_wl <- NULL
HAM_sleep$ham_3b_wd <- NULL
HAM_sleep$ham_3c_rld <- NULL
HAM_sleep$ham_3d_asa <- NULL 
HAM_sleep$ham_3e_pdw <- NULL
 
HAM_protect_new <- HAM_protect_new %>%
     filter(!is.na(ham_1_dm))
 
columns_to_sum <- grep("^ham_", names(HAM_protect_new), value = TRUE)
HAM_protect_new[, columns_to_sum] <- lapply(HAM_protect_new[, columns_to_sum], function(x) as.numeric(as.character(x)))

HAM_protect_new$sum_ham_protect <- rowSums(HAM_protect_new[, columns_to_sum], na.rm = TRUE)

columns_to_sum <- grep("^ham_", names(HAM_sleep), value = TRUE)
HAM_sleep[, columns_to_sum] <- lapply(HAM_sleep[, columns_to_sum], function(x) as.numeric(as.character(x)))
HAM_sleep$sum_ham_sleep <- rowSums(HAM_sleep[, columns_to_sum], na.rm = TRUE)
 

columns_to_mean <- grep("^ham_", names(HAM_sleep), value = TRUE)
HAM_sleep$mean_ham_sleep <- rowMeans(HAM_sleep[, columns_to_mean], na.rm = TRUE) 

columns_to_mean <- grep("^ham_", names(HAM_protect_new), value = TRUE)
HAM_protect_new$mean_ham_protect <- rowMeans(HAM_protect_new[, columns_to_mean], na.rm = TRUE)

names(HAM_sleep)[names(HAM_sleep) == "ID"] <- "new_id"
columns_to_remove <- grep("^ham_", names(HAM_sleep), value = TRUE)
HAM_sleep <- HAM_sleep[, !names(HAM_sleep) %in% columns_to_remove]
 
columns_to_remove <- grep("^ham_", names(HAM_protect_new), value = TRUE)
HAM_protect_new <- HAM_protect_new[, !names(HAM_protect_new) %in% columns_to_remove]
 
HAM_sleep$timepoint <- NULL
names(HAM_sleep)[names(HAM_sleep) == "bq_date"] <- "bq_sleep" 
names(HAM_sleep)[names(HAM_sleep) == "fug_date"] <- "fug_sleep"
 
HAM_protect_new$timepoint <- NULL
names(HAM_protect_new)[names(HAM_protect_new) == "bq_date"] <- "bq_protect"
names(HAM_protect_new)[names(HAM_protect_new) == "fug_date"] <- "fug_protect"
 
 
date_cols <- c('reg_condate_protect', 'reg_condate_protect2', 'reg_condate_protect3', 'reg_condate_suicid2', 'reg_condate_suicide')
consent_date[date_cols] <- lapply(consent_date[date_cols], as.Date, format = "%Y-%m-%d")
earliest_dates <- consent_date %>%
     group_by(ID) %>%
     summarize(earliest_date = min(c_across(all_of(date_cols)), na.rm = TRUE))

 
 
merged_data <- merge(HAM_sleep, HAM_protect_new, by = "new_id", all = TRUE)
names(earliest_dates)[names(earliest_dates) == "ID"] <- "new_id"
data <- merge(merged_data, earliest_dates, by = "new_id", all = TRUE)
names(data)[names(data) == "earliest_date"] <- "consent"
 
hamdate_cols <- c('bq_sleep', 'bq_protect', 'fug_sleep', 'fug_protect')
data$consent <- as.Date(data$consent, format = "%Y-%m-%d")
data <- data %>%
     mutate(target = consent + 365)
find_closest_date <- function(target, consent_date, dates) {
     dates <- dates[!is.na(dates)]
     if (length(dates) == 0) return(NA)
     
     later_dates <- dates[dates > consent_date]
     if (length(later_dates) > 0) {
         closest_date <- later_dates[which.min(abs(later_dates - target))]
     } else {
         closest_date <- dates[which.min(abs(dates - target))]
     }
     
     return(closest_date)
 }
 
data <- data %>%
     rowwise() %>%
     mutate(closest_to_consent = find_closest_date(target, consent, c_across(all_of(hamdate_cols))))
 
View(data)
find_closest_date <- function(target, dates) {
     dates <- dates[!is.na(dates)]
     if (length(dates) == 0) return(NA)
     
     closest_date <- dates[which.min(abs(dates - target))]
     return(closest_date)
 }
 
data <- data %>%
     rowwise() %>%
     mutate(closest_date = find_closest_date(target, c_across(all_of(hamdate_cols)))) %>%
     ungroup()
 
data <- data %>%
     group_by(new_id) %>%
     filter(any(c_across(all_of(hamdate_cols)) == closest_date)) %>%
     slice(1) %>%
     ungroup()
 
 

data$target <- NULL
data$closest_to_consent <- NULL

result <- data.frame(new_id = integer(), date = as.Date(character()), sum_ham = numeric(), mean_ham = numeric(), consent = as.Date(character()))
 
for (i in 1:nrow(data)) {
     closest_date <- data$closest_date[i]
     if (!is.na(data$fug_protect[i]) && data$fug_protect[i] == closest_date) {
         result <- rbind(result, data.frame(new_id = data$new_id[i], date = data$fug_protect[i], sum_ham = data$sum_ham_protect[i], mean_ham = data$mean_ham_protect[i], consent = data$consent[i]))
     } else if (!is.na(data$bq_protect[i]) && data$bq_protect[i] == closest_date) {
         result <- rbind(result, data.frame(new_id = data$new_id[i], date = data$bq_protect[i], sum_ham = data$sum_ham_protect[i], mean_ham = data$mean_ham_protect[i], consent = data$consent[i]))
     } else if (!is.na(data$fug_sleep[i]) && data$fug_sleep[i] == closest_date) {
         result <- rbind(result, data.frame(new_id = data$new_id[i], date = data$fug_sleep[i], sum_ham = data$sum_ham_sleep[i], mean_ham = data$mean_ham_sleep[i], consent = data$consent[i]))
     } else if (!is.na(data$bq_sleep[i]) && data$bq_sleep[i] == closest_date) {
         result <- rbind(result, data.frame(new_id = data$new_id[i], date = data$bq_sleep[i], sum_ham = data$sum_ham_sleep[i], mean_ham = data$mean_ham_sleep[i], consent = data$consent[i]))
     }
 }
print(result)
  
